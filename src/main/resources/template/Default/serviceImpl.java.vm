##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))
#set($firstLowerTableName = $!tool.firstLowerCase($tableInfo.name) )
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service/impl"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;

import $!{tableInfo.savePackageName}$tool.append(".entity.")$!{tableInfo.name};
import $!{tableInfo.savePackageName}$tool.append(".service.")I$!{tableInfo.name}Service;
import $!{tableInfo.savePackageName}$tool.append(".repository.")$!{tableInfo.name}Repository;
import $!{tableInfo.savePackageName}$tool.append(".obj.")$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}$tool.append(".obj.")$!{tableInfo.name}QueryVO;
import $!{tableInfo.savePackageName}$tool.append(".obj.")$!{tableInfo.name}DTO;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Service
@Slf4j
public class $!{tableName} implements I$!{tableInfo.name}Service {
    @Autowired
    private $!{tableInfo.name}Repository $!tool.firstLowerCase($tableInfo.name)Repository;

    /**
     * 通过ID查询单条数据
     *
     * @param $!tool.firstLowerCase($tableInfo.name)QueryVO 查询参数
     * @return 实例对象
     */
    @Override
    public $!{tableInfo.name}DTO fineOne($!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        return $!tool.firstLowerCase($tableInfo.name)Repository$tool.append(".findById().map")$tool.append("(")
                $!tool.firstLowerCase($tableInfo.name)Entity $tool.append(" -> {")
                    return constructorDTO($!tool.firstLowerCase($tableInfo.name)Entity);
                $tool.append("}")
        $tool.append(").")orElse(null);
    $tool.append("}")

    /**
     * 查询多条数据
     *
     * @param $!tool.firstLowerCase($tableInfo.name)QueryVO 查询参数
     * @return 对象列表
     */
    @Override
    Page<$!{tableInfo.name}DTO> queryAll($!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        return $!tool.firstLowerCase($tableInfo.name)Repository$tool.append(".findAll().map")$tool.append("(")
            $!tool.firstLowerCase($tableInfo.name)Entity $tool.append(" -> {")
                return constructorDTO($!tool.firstLowerCase($tableInfo.name)Entity);
            $tool.append("}")
        $tool.append(")");
    $tool.append("}")

    public $!{tableInfo.name}DTO constructorDTO($!{tableInfo.name}Entity $!tool.firstLowerCase($tableInfo.name)Entity) $tool.append("{")
        $!{tableInfo.name}DTO $!tool.firstLowerCase($tableInfo.name)DTO = new $!{tableInfo.name}DTO();
        BeanUtils.copyProperties($!tool.firstLowerCase($tableInfo.name)Entity, $!tool.firstLowerCase($tableInfo.name)DTO);
        return $!tool.firstLowerCase($tableInfo.name)DTO;
    $tool.append("}")

    /**
     * 新增数据
     *
     * @param $!tool.firstLowerCase($tableInfo.name)VO 实例对象
     */
    @Override
    public void newOne($!{tableInfo.name}VO $!tool.firstLowerCase($tableInfo.name)VO) $tool.append("{")
        CrudUtil.saveUpdate($!tool.firstLowerCase($tableInfo.name)VO, $!tool.firstLowerCase($tableInfo.name)Entity$tool.append(".class"), null)
    $tool.append("}")

    /**
     * 修改数据
     *
     * @param $!tool.firstLowerCase($tableInfo.name)VO 实例对象
     */
    @Override
    public void updateOne($!{tableInfo.name}VO $!tool.firstLowerCase($tableInfo.name)VO) $tool.append("{")
        CrudUtil.saveUpdate($!tool.firstLowerCase($tableInfo.name)VO, $!tool.firstLowerCase($tableInfo.name)Entity$tool.append(".class"), null)
    $tool.append("}")

    /**
     * 删除数据
     *
     * @param $!tool.firstLowerCase($tableInfo.name)QueryVO 参数
     * @return 是否成功
     */
    @Override
    public boolean delOne($!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        CrudUtil.delete( $!tool.firstLowerCase($tableInfo.name)Repository, null)
    $tool.append("}")

}