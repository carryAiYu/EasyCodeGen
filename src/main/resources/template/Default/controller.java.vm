##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Controller"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/controller"))
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;

import com.paoba.common.utils.response.ResponseUtil;
import com.paoba.common.vo.Message;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name}Entity;
import $!{tableInfo.savePackageName}.obj.$!{tableInfo.name}DTO;
import $!{tableInfo.savePackageName}.obj.$!{tableInfo.name}VO;
import $!{tableInfo.savePackageName}.obj.$!{tableInfo.name}QueryVO;
import $!{tableInfo.savePackageName}.obj.I$!{tableInfo.name}Service;


import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表控制层
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Slf4j
@Api(tags = "$!tool.firstLowerCase($tableInfo.name)")
@Validated
@RestController
@RequestMapping("$!tool.firstLowerCase($tableInfo.name)")
public class $!{tableName} {

    @Autowired
    private I$!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;

    @ApiOperation(value = "创建 $tableInfo.name")
    @RequestMapping(value = "newOne", method = RequestMethod.POST)
    public Message newOne(@RequestBody @Validated $!{tableInfo.name}VO $!tool.firstLowerCase($tableInfo.name)VO) $tool.append("{")
        $!tool.firstLowerCase($tableInfo.name)Service$!tool.append(".newOne(")$!tool.firstLowerCase($tableInfo.name)VO$!tool.append(")");
        return ResponseUtil.successSaveResponse();
    $tool.append("}")

    @ApiOperation(value = "创建 $tableInfo.name")
    @RequestMapping(value = "newOne", method = RequestMethod.POST)
    public Message updateOne(@RequestBody $!{tableInfo.name}VO $!tool.firstLowerCase($tableInfo.name)VO) $tool.append("{")
        $!tool.firstLowerCase($tableInfo.name)Service$!tool.append(".updateOne(")$!tool.firstLowerCase($tableInfo.name)VO$tool.append(")");
        return ResponseUtil.successUpdateResponse();
    $tool.append("}")

    @ApiOperation(value = "$!{tableInfo.name}列表 精确查询", response = $!{tableInfo.name}DTO.class)
    @RequestMapping(value = "list", method = RequestMethod.POST)
    public Message<List<$!{tableInfo.name}DTO>> list(@ResponseBody @Validated $!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        Page<$!{tableInfo.name}DTO> resultPage = $!tool.firstLowerCase($tableInfo.name)Service$tool.append(".queryAll(")$!tool.firstLowerCase($tableInfo.name)QueryVO$tool.append(")");
        return ResponseUtil.successQueryPageResponse(resultPage.getContent(), (int) resultPage.getTotalElements());
    $tool.append("}")

    @ApiOperation(value = "$!{tableInfo.name} 详情", response = $!{tableInfo.name}DTO.class)
    @RequestMapping(value = "findOne", method = RequestMethod.GET)
    public Message findById($!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        $!{tableInfo.name}DTO result = $!tool.firstLowerCase($tableInfo.name)Service$tool.append(".findOne(")$!tool.firstLowerCase($tableInfo.name)QueryVO$tool.append(")");
        return ResponseUtil.successQueryOneResponse(result);
    $tool.append("}")

    @ApiOperation(value = "删除 $!{tableInfo.name}")
    @RequestMapping(value = "del", method = RequestMethod.GET)
    public Message del($!{tableInfo.name}QueryVO $!tool.firstLowerCase($tableInfo.name)QueryVO) $tool.append("{")
        $!tool.firstLowerCase($tableInfo.name)Service$tool.append(".delOne(")$!tool.firstLowerCase($tableInfo.name)QueryVO$tool.append(")");
        return ResponseUtil.successDeleteResponse();
    $tool.append("}")


}